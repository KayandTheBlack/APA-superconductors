knitr::opts_chunk$set(echo = TRUE)
#options(max.print=1000000)
summary(df)
knitr::opts_chunk$set(echo = TRUE)
setwd("E:/Documents/Universidad (FIB)/APA/practica")
superConductor <- read.csv("train.csv", na.strings = c("?"))
superConductorCompo <- read.csv("unique_m.csv", na.strings = c("?"))
df <- data.frame(superConductor, superConductorCompo)#merge(superConductor, superConductorCompo)
drops <- c("critical_temp.1", "material")
df<-df[,!(names(df) %in% drops)]
head(df)
df <- data.frame(superConductor, superConductorCompo)#merge(superConductor, superConductorCompo)
drops <- c("critical_temp.1", "material")
df<-df[,!(names(df) %in% drops)]
head(df).T
df <- data.frame(superConductor, superConductorCompo)#merge(superConductor, superConductorCompo)
drops <- c("critical_temp.1", "material")
df<-df[,!(names(df) %in% drops)]
t(head(df))
#options(max.print=1000000)
summary(df)
#options(max.print=1000000)
t(summary(df))
#drop neon, helium, Argon, kripton, Xenon, , Polonium, Astatine and Radon
drops <- c("Ne", "He", "Ar", "Kr", "Xe","Po", "At", "Rn")
df<-df[,!(names(df) %in% drops)]
Very time consuming code, only shows slightly skewed graphics for some of them
Very time consuming code, only shows slightly skewed graphics for some of them
#Very time consuming code, only shows slightly skewed graphics for some of them
for (col in names(superConductor)){
hist(df[,col], main = paste("Histogram of ", col))
}
# Some seem to need a log
print(skewness(df[,"wtd_mean_Density"]))
install.packages("moment")
install.packages("moments")
library(moments)
print(skewness(df[,"wtd_mean_Density"]))
print(kurtosis(df[,"wtd_mean_Density"]))
library(moments)
print()
library(moments)
print("")
print(skewness(df[,"wtd_mean_Density"]))
print(kurtosis(df[,"wtd_mean_Density"]))
library(moments)
print("\n", skewness(df[,"wtd_mean_Density"]))
print(kurtosis(df[,"wtd_mean_Density"]))
library(moments)
print("\n" +  skewness(df[,"wtd_mean_Density"]))
library(moments)
print(skewness(df[,"wtd_mean_Density"]))
print(kurtosis(df[,"wtd_mean_Density"]))
library(moments)
for (col in names(superConductor)){ #only to physical variables, not yet to real ones
hist(df[,col], main = paste("Histogram of ", col))
if(skewness(df[,col]) > 2 && kurtosis(df[,"wtd_mean_Density"]) > 2) {
print(paste0(col, " needs log")
}
library(moments)
for (col in names(superConductor)){ #only to physical variables, not yet to real ones
hist(df[,col], main = paste("Histogram of ", col))
if(skewness(df[,col]) > 2 && kurtosis(df[,"wtd_mean_Density"]) > 2) {
print(paste0(col, " needs log"))
}
}
library(moments)
for (col in names(superConductor)){ #only to physical variables, not yet to real ones
if(skewness(df[,col]) > 2 && kurtosis(df[,"wtd_mean_Density"]) > 2) {
print(paste0(col, " needs log"))
}
}
df[,"wtd_mean_Density"].min
df[,"wtd_mean_Density"].min()
min(df[,"wtd_mean_Density"])
library(moments)
for (col in names(superConductor)){ #only to physical variables, not yet to real ones
if(skewness(df[,col]) > 2 && kurtosis(df[,col]) > 2) { # We use 2 as threshold for logs
if (min(df[,col])==0) {
print(paste0(col, " needs log1"))
} else {
print(paste0(col, " needs log"))
}
}
}
dat <- data.frame(x = rnorm(10, 30, .2), y = runif(10, 3, 5))
scaled.dat <- scale(dat)
colMeans(scaled.dat)  # faster version of apply(scaled.dat, 2, mean)
apply(scaled.dat, 2, sd)
View(scaled.dat)
View(dat)
?log
log <- c("mean_Density","wtd_mean_Density","mean_FusionHeat","wtd_mean_FusionHeat","gmean_FusionHeat","wtd_gmean_FusionHeat","gmean_ThermalConductivity","wtd_gmean_ThermalConductivity")
log1 <- c("wtd_range_atomic_mass","wtd_range_Density","range_FusionHeat","wtd_range_FusionHeat","std_FusionHeat","wtd_std_FusionHeat")
for (col in log) {
df[,paste0(col, "_log")] = log(df[,col])
}
for (col in log1) {
df[,paste0(col, "_log1")] = log1p(df[,col])
}
summary(df)
t(summary(df))
hist(df[,"mean_Density"], main = "Histogram of mean_Density")
hist(df[,"mean_Density_log"], main = "Histogram of mean_Density_log")
?hist
?par
log
log+log1
log.join(log1)
c(log, log1)
diabetic_data_1 <- diabetic_data[, -which(names(diabetic_data) %in% c(log,log1))]
library(moments)
for (col in names(df)){ #only to physical variables, not yet to real ones
if(skewness(df[,col]) > 2 && kurtosis(df[,col]) > 2) { # We use 2 as threshold for logs
if (min(df[,col])==0) {
print(paste0(col, " needs log1"))
} else {
print(paste0(col, " needs log"))
}
}
}
library(moments)
for (col in names(superConductor)){ #only to physical variables, not yet to real ones
if(skewness(df[,col]) > 2 && kurtosis(df[,col]) > 2) { # We use 2 as threshold for logs
if (min(df[,col])==0) {
print(paste0(col, " needs log1"))
} else {
print(paste0(col, " needs log"))
}
}
}
df <- df[, -which(names(df) %in% c(log,log1))]
standardized <- scale(df)
View(df)
View(df)
View(standardized)
View(standardized)
standardized <- as.data.frame(scale(df))
set.seed(42)
train_size <- floor(0.7*nrow(standardized))
train_ind <- sample(sq_len(nrow(standardized)), size = train_size)
set.seed(42)
train_size <- floor(0.7*nrow(standardized))
train_ind <- sample(seq_len(nrow(standardized)), size = train_size)
train <- standardized[train_ind,]
test <- standardized[-train_ind,]
set.seed(42)
learn_size <- floor(0.7*nrow(standardized))
learn_ind <- sample(seq_len(nrow(standardized)), size = learn_size)
learn <- standardized[learn_ind,]
test <- standardized[-learn_ind,]
write.csv(learn, file="learn_set.csv")
write.csv(test, file="test_set.csv")
